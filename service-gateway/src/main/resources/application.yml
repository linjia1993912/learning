server:
  port: 8081

#配置注册中心地址
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
spring:
  application:
    name: service-gateway
  cloud:
      gateway:
        discovery:
          locator:
            enabled: false
            lowerCaseServiceId: true
#spring.cloud.gateway.discovery.locator.enabled为true，表明gateway开启服务注册和发现的功能
#并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router,这个router将以服务名开头的请求路径转发到对应的服务
#spring.cloud.gateway.discovery.locator.lowerCaseServiceId是将请求路径上的服务名配置为小写
#（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），比如以/eureka-client/*的请求路径被路由转发到服务名为eureka-client的服务上。


#在上面的例子中，向gateway-service发送的请求时，url必须带上服务名service-hi这个前缀，才能转发到service-hi上，转发之前会将service-hi去掉。
# 那么我能不能自定义请求路径呢，毕竟根据服务名有时过于太长，或者历史的原因不能根据服务名去路由，需要由自定义路径并转发到具体的服务上。
# 答案是肯定的是可以的，只需要修改工程的配置文件application.yml，具体配置如下：
        routes:
            - id: eureka-client
              uri: lb://EUREKA-CLIENT
              predicates:
                - Path=/demo/**
              filters:
                - StripPrefix=1
#在上面的配置中，配置了一个Path 的predict,将以/demo/**开头的请求都会转发到uri为lb://EUREKA-CLIENT的地址上
#lb://EUREKA-CLIENT即eureka-client服务的负载均衡地址,并用StripPrefix的filter 在转发之前将/demo去掉
#同时将spring.cloud.gateway.discovery.locator.enabled改为false,如果不改的话，
#之前的localhost:8081/service-hi/hi?name=1323这样的请求地址也能正常访问，因为这时为每个服务创建了2个router


